name: Create Production Releases
run-name: Create Production Releases
on:
    push:
        branches:
            - 63-ci-cd

jobs:
    make-gelly-artifacts:
        runs-on: windows-latest
        strategy:
            matrix:
                presets: [
                    { configure: "gelly-gmod-relwithdebinfo", build: "Gelly-GMod-RelWithDebInfo" },
                    { configure: "gelly-gmod-release", build: "Gelly-GMod-Release" }
                ]
        steps:
            -   name: Checkout latest Gelly
                if: steps.cache-gelly.outputs.cache-hit != 'true'
                uses: actions/checkout@v3
                with:
                    path: gelly # important for when we add a cache step
                    submodules: recursive
                    ref: 63-ci-cd

            -   name: Set up Ninja
                uses: seanmiddleditch/gha-setup-ninja@master
            -   uses: ilammy/msvc-dev-cmd@v1
                with:
                    arch: amd64 # once this is run, gelly-production-release.zip will be created in the root of the repository, and we can just ignore the rest
            -   name: Set up x64 Developer Command Prompt for VS 2022
                run: |
                    cd gelly
                    cmake -DGELLY_PRODUCTION_BUILD=ON --fresh --preset ${{ matrix.presets.configure }} -S . -B bin/${{ matrix.presets.configure }}
                    cmake --build --target gelly-gmod --preset ${{ matrix.presets.build }} --clean-first
            -   name: Add addon to release
                run: |
                    cd gelly
                    scripts/gmad.exe create -folder packages/addon -out release/garrysmod/addons/gelly/gelly.gma
            -   name: Zip release
                run: |
                    cd gelly
                    Compress-Archive -Path release/* -Destination ${{ matrix.presets.configure }}-x64.zip
            -   name: Upload release
                uses: actions/upload-artifact@v2
                with:
                    name: ${{ matrix.presets.configure }}-x64
                    path: gelly/${{ matrix.presets.configure }}-x64.zip
    make-release:
        runs-on: windows-latest
        needs: make-gelly-artifacts
        permissions:
            contents: write
        steps:
            -   name: Download artifacts
                uses: actions/download-artifact@v2
                with:
                    path: artifacts # When we don't specify a name, it'll download all artifacts we generated
            -   name: Get changelog
                uses: actions/checkout@v4
                with:
                    path: gelly
                    sparse-checkout: 'CHANGELOG.md'
                    ref: 63-ci-cd
            -   name: Parse changelog
                id: parse-changelog
                uses: ocavue/changelog-parser-action@v1
                with:
                    filePath: gelly/CHANGELOG.md
            -   name: Debug log
                run: |
                    dir
                    dir artifacts
            -   name: Create release
                uses: softprops/action-gh-release@v2
                with:
                    files: |
                        artifacts/gelly-gmod-relwithdebinfo-x64.zip
                        artifacts/gelly-gmod-release-x64.zip
                    name: ${{ steps.parse-changelog.outputs.latestVersion }}
                    body: ${{ steps.parse-changelog.outputs.latestBody }}
                    tag_name: ${{ steps.parse-changelog.outputs.latestVersion }}