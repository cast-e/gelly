#ifndef CD3D9TO11SHAREDTEXTURE_H
#define CD3D9TO11SHAREDTEXTURE_H

#include <d3d11.h>

#include "CD3D11ManagedTexture.h"
#include "GellyObserverPtr.h"
#include "IManagedTexture.h"

/**
 * Implements a shared texture which can be used for D3D9Ex -> D3D11 device
 * textures.
 */
class CD3D9to11SharedTexture : public IManagedTexture {
private:
	IRenderContext *context;

	ID3D11Texture2D *texture;
	ID3D11ShaderResourceView *srv;
	ID3D11RenderTargetView *rtv;
	ID3D11UnorderedAccessView *uav;
	ID3D11SamplerState *sampler{};

	HANDLE sharedHandle;
	TextureDesc autoGeneratedDesc;

	ID3D11Resource *d3d11Resource{};

	void AutogenerateDesc();

public:
	explicit CD3D9to11SharedTexture(HANDLE sharedHandle);
	~CD3D9to11SharedTexture() override;

	void SetDesc(const TextureDesc &desc) override;
	[[nodiscard]] const TextureDesc &GetDesc() const override;

	bool Create() override;
	void Destroy() override;
	void AttachToContext(IRenderContext *context) override;
	GellyObserverPtr<IRenderContext> GetParentContext() override;

	void SetFullscreenSize() override;
	void *GetSharedHandle() override;
	void *GetResource(TextureResource resource) override;

	void BindToPipeline(
		TextureBindStage stage, uint8_t slot, OptionalDepthBuffer depthBuffer
	) override;
	void Clear(const float color[4]) override;

	void CopyToTexture(GellyInterfaceRef<IManagedTexture> texture) override;
};

#endif //CD3D9TO11SHAREDTEXTURE_H
